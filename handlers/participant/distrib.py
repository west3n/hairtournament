from aiogram import Dispatcher, types
from database import participants, works
from handlers.participant.first_nomination import Nomination
from handlers.participant.second_nomination import Nomination_second
from handlers.participant.third_nomination import Nomination_third


async def handle_participant_emoji(msg: types.Message):
    all_tg_ids_1 = [all_ids[0] for all_ids in await participants.all_nominations_ids("–†–µ–¥–∫–∏–µ –≤–æ–ª–æ—Å—ã")]
    all_tg_ids_2 = [all_ids[0] for all_ids in await participants.all_nominations_ids("–†–æ–≤–Ω—ã–π —Å—Ä–µ–∑")]
    all_tg_ids_3 = [all_ids[0] for all_ids in await participants.all_nominations_ids("–ö–æ—Ä–æ—Ç–∫–∏–µ –≤–æ–ª–æ—Å—ã")]
    photo_path = 'media/first_example.jpg'
    user_data = await participants.get_name_by_tg_id(msg.from_id)
    with open(photo_path, 'rb') as photo:
        if msg.text == "üëç" and msg.from_id in all_tg_ids_1:
            try:
                await works.add_new_work(user_data[0], "–†–µ–¥–∫–∏–µ –≤–æ–ª–æ—Å—ã")
                await msg.answer(
                    "–í—ã –Ω–∞—á–∞–ª–∏ –≤—ã–ø–æ–ª–Ω—è—Ç—å —Ä–∞–±–æ—Ç—É –≤ –Ω–æ–º–∏–Ω–∞—Ü–∏–∏ '–†–µ–¥–∫–∏–µ –≤–æ–ª–æ—Å—ã'\n–ñ–µ–ª–∞–µ–º –≤–∞–º –ø–æ–±–µ–¥—ã –≤ –ß–µ–º–ø–∏–æ–Ω–∞—Ç–µ!")
                await msg.answer_photo(
                    photo=photo,
                    caption="–ù–æ–º–∏–Ω–∞—Ü–∏—è: ‚Äú–†–µ–¥–∫–∏–µ –≤–æ–ª–æ—Å—ã‚Äù\n\n–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–æ—Ç–æ ‚Ññ1. –î–ª—è —ç—Ç–æ–≥–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –≤ —ç—Ç–æ—Ç —á–∞—Ç"
                            "\n\n<b>–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —Å—ä–µ–º–∫–µ:</b>\n–í –∫–∞–¥—Ä–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –º–æ–¥–µ–ª—å –ø–æ –ø–æ—è—Å, —Å—Ç–æ—è –ª–∏—Ü–æ–º –∫ –∫–∞–º–µ—Ä–µ."
                            "–í–æ–ª–æ—Å—ã –º–æ–¥–µ–ª–∏ —Ä–∞—Å–ø—É—â–µ–Ω—ã –∏ –Ω–µ —É–±—Ä–∞–Ω—ã –∑–∞ —É—à–∏, –ø–µ—Ä–µ–∫–∏–Ω—É—Ç—ã –≤–ø–µ—Ä–µ–¥. –í —Ü–µ–Ω—Ç—Ä–µ –∫–∞–¥—Ä–∞ –ø–ª–µ—á–µ–≤–∞—è"
                            " –ª–∏–Ω–∏—è –º–æ–¥–µ–ª–∏. –ü–æ–ª–æ–∂–µ–Ω–∏–µ –∫–∞–º–µ—Ä—ã –ø–µ—Ä–ø–µ–Ω–¥–∏–∫—É–ª—è—Ä–Ω–æ –ø–æ–ª—É. –ö–∞–º–µ—Ä–∞ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∞ –Ω–∞ —à—Ç–∞—Ç–∏–≤–µ "
                            "–∏–ª–∏ —Å—ä–µ–º–∫—É –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç —Ç—Ä–µ—Ç—å–µ –ª–∏—Ü–æ. –†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω–æ–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –æ—Ç –∫–∞–º–µ—Ä—ã –¥–æ –º–æ–¥–µ–ª–∏ - "
                            "–¥–æ 2—Ö –º–µ—Ç—Ä–æ–≤.\n\n\n–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ñ–æ—Ç–æ –∑–∞–ø—Ä–µ—â–µ–Ω–æ‚ùå")
                await Nomination.first_photo.set()
            except:
                await msg.answer("–í—ã —É–∂–µ –∑–∞–≥—Ä—É–∂–∞–ª–∏ –¥–∞–Ω–Ω—ã–µ –≤ —ç—Ç–æ–π –Ω–æ–º–∏–Ω–∞—Ü–∏–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–∂–∏–¥–∞–π—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å—É–¥–µ–π—Å—Ç–≤–∞.")
        elif msg.text == "üî•" and msg.from_id in all_tg_ids_2:
            try:
                await works.add_new_work(user_data[0], "–†–æ–≤–Ω—ã–π —Å—Ä–µ–∑")
                await msg.answer(
                    "–í—ã –Ω–∞—á–∞–ª–∏ –≤—ã–ø–æ–ª–Ω—è—Ç—å —Ä–∞–±–æ—Ç—É –≤ –Ω–æ–º–∏–Ω–∞—Ü–∏–∏ '–†–æ–≤–Ω—ã–π —Å—Ä–µ–∑'\n–ñ–µ–ª–∞–µ–º –≤–∞–º –ø–æ–±–µ–¥—ã –≤ –ß–µ–º–ø–∏–æ–Ω–∞—Ç–µ!")
                await msg.answer_photo(
                    photo=photo,
                    caption="–ù–æ–º–∏–Ω–∞—Ü–∏—è: ‚Äú–†–æ–≤–Ω—ã–π —Å—Ä–µ–∑‚Äù\n\n–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–æ—Ç–æ ‚Ññ1. –î–ª—è —ç—Ç–æ–≥–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –≤ —ç—Ç–æ—Ç —á–∞—Ç"
                            "\n\n<b>–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —Å—ä–µ–º–∫–µ:</b>\n–í –∫–∞–¥—Ä–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –º–æ–¥–µ–ª—å –ø–æ –ø–æ—è—Å, —Å—Ç–æ—è –ª–∏—Ü–æ–º –∫ –∫–∞–º–µ—Ä–µ."
                            "–í–æ–ª–æ—Å—ã –º–æ–¥–µ–ª–∏ —Ä–∞—Å–ø—É—â–µ–Ω—ã –∏ –Ω–µ —É–±—Ä–∞–Ω—ã –∑–∞ —É—à–∏, –ø–µ—Ä–µ–∫–∏–Ω—É—Ç—ã –≤–ø–µ—Ä–µ–¥. –í —Ü–µ–Ω—Ç—Ä–µ –∫–∞–¥—Ä–∞ –ø–ª–µ—á–µ–≤–∞—è"
                            " –ª–∏–Ω–∏—è –º–æ–¥–µ–ª–∏. –ü–æ–ª–æ–∂–µ–Ω–∏–µ –∫–∞–º–µ—Ä—ã –ø–µ—Ä–ø–µ–Ω–¥–∏–∫—É–ª—è—Ä–Ω–æ –ø–æ–ª—É. –ö–∞–º–µ—Ä–∞ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∞ –Ω–∞ —à—Ç–∞—Ç–∏–≤–µ "
                            "–∏–ª–∏ —Å—ä–µ–º–∫—É –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç —Ç—Ä–µ—Ç—å–µ –ª–∏—Ü–æ. –†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω–æ–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –æ—Ç –∫–∞–º–µ—Ä—ã –¥–æ –º–æ–¥–µ–ª–∏ - "
                            "–¥–æ 2—Ö –º–µ—Ç—Ä–æ–≤.\n\n\n–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ñ–æ—Ç–æ –∑–∞–ø—Ä–µ—â–µ–Ω–æ‚ùå")
                await Nomination_second.first_photo.set()
            except:
                await msg.answer("–í—ã —É–∂–µ –∑–∞–≥—Ä—É–∂–∞–ª–∏ –¥–∞–Ω–Ω—ã–µ –≤ —ç—Ç–æ–π –Ω–æ–º–∏–Ω–∞—Ü–∏–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–∂–∏–¥–∞–π—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å—É–¥–µ–π—Å—Ç–≤–∞.")
        elif msg.text == "‚ù§Ô∏è" and msg.from_id in all_tg_ids_3:
            try:
                await works.add_new_work(user_data[0], "–ö–æ—Ä–æ—Ç–∫–∏–µ –≤–æ–ª–æ—Å—ã")
                await msg.answer(
                    "–í—ã –Ω–∞—á–∞–ª–∏ –≤—ã–ø–æ–ª–Ω—è—Ç—å —Ä–∞–±–æ—Ç—É –≤ –Ω–æ–º–∏–Ω–∞—Ü–∏–∏ '–ö–æ—Ä–æ—Ç–∫–∏–µ –≤–æ–ª–æ—Å—ã'\n–ñ–µ–ª–∞–µ–º –≤–∞–º –ø–æ–±–µ–¥—ã –≤ –ß–µ–º–ø–∏–æ–Ω–∞—Ç–µ!")
                await msg.answer_photo(
                    photo=photo,
                    caption="–ù–æ–º–∏–Ω–∞—Ü–∏—è: ‚Äú–ö–æ—Ä–æ—Ç–∫–∏–µ –≤–æ–ª–æ—Å—ã‚Äù\n\n–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–æ—Ç–æ ‚Ññ1. –î–ª—è —ç—Ç–æ–≥–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –≤ —ç—Ç–æ—Ç —á–∞—Ç"
                            "\n\n<b>–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —Å—ä–µ–º–∫–µ:</b>\n–í –∫–∞–¥—Ä–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –º–æ–¥–µ–ª—å –ø–æ –ø–æ—è—Å, —Å—Ç–æ—è –ª–∏—Ü–æ–º –∫ –∫–∞–º–µ—Ä–µ."
                            "–í–æ–ª–æ—Å—ã –º–æ–¥–µ–ª–∏ —Ä–∞—Å–ø—É—â–µ–Ω—ã –∏ –Ω–µ —É–±—Ä–∞–Ω—ã –∑–∞ —É—à–∏, –ø–µ—Ä–µ–∫–∏–Ω—É—Ç—ã –≤–ø–µ—Ä–µ–¥. –í —Ü–µ–Ω—Ç—Ä–µ –∫–∞–¥—Ä–∞ –ø–ª–µ—á–µ–≤–∞—è"
                            " –ª–∏–Ω–∏—è –º–æ–¥–µ–ª–∏. –ü–æ–ª–æ–∂–µ–Ω–∏–µ –∫–∞–º–µ—Ä—ã –ø–µ—Ä–ø–µ–Ω–¥–∏–∫—É–ª—è—Ä–Ω–æ –ø–æ–ª—É. –ö–∞–º–µ—Ä–∞ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∞ –Ω–∞ —à—Ç–∞—Ç–∏–≤–µ "
                            "–∏–ª–∏ —Å—ä–µ–º–∫—É –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç —Ç—Ä–µ—Ç—å–µ –ª–∏—Ü–æ. –†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω–æ–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –æ—Ç –∫–∞–º–µ—Ä—ã –¥–æ –º–æ–¥–µ–ª–∏ - "
                            "–¥–æ 2—Ö –º–µ—Ç—Ä–æ–≤.\n\n\n–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ñ–æ—Ç–æ –∑–∞–ø—Ä–µ—â–µ–Ω–æ‚ùå")
                await Nomination_third.first_photo.set()
            except:
                await msg.answer(
                    "–í—ã —É–∂–µ –∑–∞–≥—Ä—É–∂–∞–ª–∏ –¥–∞–Ω–Ω—ã–µ –≤ —ç—Ç–æ–π –Ω–æ–º–∏–Ω–∞—Ü–∏–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–∂–∏–¥–∞–π—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å—É–¥–µ–π—Å—Ç–≤–∞.")


def register(dp: Dispatcher):
    dp.register_message_handler(handle_participant_emoji, content_types=['text'])


